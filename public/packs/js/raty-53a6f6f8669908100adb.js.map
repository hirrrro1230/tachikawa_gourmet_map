{"version":3,"file":"js/raty-53a6f6f8669908100adb.js","sources":["webpack:///webpack/bootstrap","webpack:///./app/javascript/packs/raty.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/packs/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./app/javascript/packs/raty.js\");\n","\"use strict\";\n\nclass Raty {\n  constructor(element, options = {}) {\n    this.element = element;\n    this.opt = {\n      ...this.defaultOptions(),\n      ...options,\n      ...this._parseOptions(element.dataset)\n    };\n  }\n  defaultOptions() {\n    return {\n      cancelButton: false,\n      cancelClass: 'raty-cancel',\n      cancelHint: 'Cancel this rating!',\n      cancelOff: 'cancel-off.png',\n      cancelOn: 'cancel-on.png',\n      cancelPlace: 'left',\n      click: undefined,\n      half: false,\n      halfShow: true,\n      hints: ['bad', 'poor', 'regular', 'good', 'gorgeous'],\n      iconRange: undefined,\n      iconRangeSame: false,\n      mouseout: undefined,\n      mouseover: undefined,\n      noRatedMsg: 'Not rated yet!',\n      number: 5,\n      numberMax: 20,\n      path: undefined,\n      precision: false,\n      readOnly: false,\n      round: {\n        down: 0.25,\n        full: 0.6,\n        up: 0.76\n      },\n      score: undefined,\n      scoreName: 'score',\n      single: false,\n      space: true,\n      starHalf: 'star-half.png',\n      starOff: 'star-off.png',\n      starOn: 'star-on.png',\n      starType: 'img',\n      target: undefined,\n      targetFormat: '{score}',\n      targetKeep: false,\n      targetScore: undefined,\n      targetText: '',\n      targetType: 'hint'\n    };\n  }\n  cancel(click) {\n    if (!this._isReadOnly()) {\n      this[click ? 'click' : 'score'](null);\n      this.scoreField.removeAttribute('value');\n    }\n  }\n\n  click(score) {\n    if (!this._isReadOnly()) {\n      score = this._adjustedScore(score);\n      this._apply(score);\n      if (this.opt.click) {\n        this.opt.click.call(this, score, this.element);\n      }\n      this._target(score);\n    }\n  }\n\n  move(score) {\n    var integer = parseInt(score, 10);\n    var decimal = this._getDecimal(score, 1);\n    if (integer >= this.opt.number) {\n      integer = this.opt.number - 1;\n      decimal = 10;\n    }\n    var width = this._getWidth();\n    var steps = width / 10;\n    var star = this.stars[integer];\n    var percent = star.offsetLeft + steps * decimal;\n    var evt = new Event('mousemove');\n    evt.pageX = percent;\n    this.isMove = true;\n    star.dispatchEvent(evt);\n    this.isMove = false;\n  }\n\n  readOnly(readonly) {\n    if (this._isReadOnly() !== readonly) {\n      if (readonly) {\n        this._lock();\n      } else {\n        this._binds();\n        this._unlock();\n      }\n      this.element.dataset.readOnly = readonly;\n    }\n  }\n  score() {\n    return arguments.length ? this.setScore(arguments[0]) : this.getScore();\n  }\n  setScore(score) {\n    if (!this._isReadOnly()) {\n      score = this._adjustedScore(score);\n      this._apply(score);\n      this._target(score);\n    }\n  }\n  getScore() {\n    var score = [];\n    var value;\n    value = this.scoreField.value;\n    score.push(value ? +value : undefined);\n    return score.length > 1 ? score : score[0];\n  }\n  init() {\n    this._executeCallbacks();\n    this._adjustNumber();\n    this._adjustHints();\n    this.opt.score = this._adjustedScore(this.opt.score);\n    if (this.opt.starType !== 'img') {\n      this._adjustStarName();\n    }\n    this._setPath();\n    this._createStars();\n    if (this.opt.cancelButton) {\n      this._createCancel();\n    }\n    if (this.opt.precision) {\n      this._adjustPrecision();\n    }\n    this._createScore();\n    this._apply(this.opt.score);\n    this._setTitle(this.opt.score);\n    this._target(this.opt.score);\n    if (this.opt.readOnly) {\n      this._lock();\n    } else {\n      this.element.style.cursor = 'pointer';\n      this._binds();\n    }\n    return this;\n  }\n\n  _adjustedScore(score) {\n    if (score || score === 0) {\n      return this._between(score, 0, this.opt.number);\n    }\n  }\n  _adjustHints() {\n    if (!this.opt.hints) {\n      this.opt.hints = [];\n    }\n    if (!this.opt.halfShow && !this.opt.half) {\n      return;\n    }\n    var steps = this.opt.precision ? 10 : 2;\n    for (let i = 0; i < this.opt.number; i++) {\n      var group = this.opt.hints[i];\n      if (Object.prototype.toString.call(group) !== '[object Array]') {\n        group = [group];\n      }\n      this.opt.hints[i] = [];\n      for (let j = 0; j < steps; j++) {\n        var hint = group[j];\n        var last = group[group.length - 1];\n        if (last === undefined) {\n          last = null;\n        }\n        this.opt.hints[i][j] = hint === undefined ? last : hint;\n      }\n    }\n  }\n  _adjustNumber() {\n    this.opt.number = this._between(this.opt.number, 1, this.opt.numberMax);\n  }\n  _adjustPrecision() {\n    this.opt.half = true;\n  }\n  _adjustStarName() {\n    const replaces = ['cancelOff', 'cancelOn', 'starHalf', 'starOff', 'starOn'];\n    this.opt.path = '';\n    for (let i = 0; i < replaces.length; i++) {\n      this.opt[replaces[i]] = this.opt[replaces[i]].replace('.', '-');\n    }\n  }\n\n  _apply(score) {\n    this._fill(score);\n    if (score) {\n      if (score > 0) {\n        this.scoreField.value = score;\n      }\n      this._roundStars(score);\n    }\n  }\n  _attributesForIndex(i) {\n    var name = this._nameForIndex(i);\n    var attributes = {\n      alt: i,\n      src: this.opt.path + this.opt[name]\n    };\n    if (this.opt.starType !== 'img') {\n      attributes = {\n        'data-alt': i,\n        'class': this.opt[name]\n      };\n    }\n    attributes.title = this._getHint(i);\n    return attributes;\n  }\n  _between(value, min, max) {\n    return Math.min(Math.max(parseFloat(value), min), max);\n  }\n\n  _binds() {\n    if (this.cancelButton) {\n      this._bindOverCancel();\n      this._bindClickCancel();\n      this._bindOutCancel();\n    }\n    this._bindOver();\n    this._bindClick();\n    this._bindOut();\n  }\n\n  _bindClick() {\n    this.stars.forEach(value => {\n      value.addEventListener('click', evt => {\n        if (this._isReadOnly()) {\n          return;\n        }\n        let execute;\n        let score = this.opt.half || this.opt.precision ? this.element.dataset.score : value.alt || value.dataset.alt;\n        if (this.opt.half && !this.opt.precision) {\n          score = this._roundHalfScore(score);\n        }\n        if (this.opt.click) {\n          execute = this.opt.click.call(this, +score, this.element, evt);\n        }\n        if (execute || execute === undefined) {\n          this._apply(+score);\n        }\n      });\n    });\n  }\n\n  _bindClickCancel() {\n    this.cancelButton.addEventListener('click', evt => {\n      this.scoreField.removeAttribute('value');\n      if (this.opt.click) {\n        this.opt.click.call(this, null, this.element, evt);\n      }\n    });\n  }\n\n  _bindOut() {\n    this.element.addEventListener('mouseleave', evt => {\n      const score = +this.scoreField.value || undefined;\n      this._apply(score);\n      this._target(score, evt);\n      this._resetTitle();\n      if (this.opt.mouseout) {\n        this.opt.mouseout.call(this, score, this.element, evt);\n      }\n    });\n  }\n\n  _bindOutCancel() {\n    this.cancelButton.addEventListener('mouseleave', evt => {\n      let icon = this.opt.cancelOff;\n      if (this.opt.starType !== 'img') {\n        icon = `${this.opt.cancelClass} ${icon}`;\n      }\n      this._setIcon(this.cancelButton, icon);\n      if (this.opt.mouseout) {\n        const score = +this.scoreField.value || undefined;\n        this.opt.mouseout.call(this, score, this.element, evt);\n      }\n    });\n  }\n\n  _bindOver() {\n    const action = this.opt.half ? 'mousemove' : 'mouseover';\n    this.stars.forEach(value => {\n      value.addEventListener(action, evt => {\n        const score = this._getScoreByPosition(evt, value);\n        this._fill(score);\n        if (this.opt.half) {\n          this._roundStars(score, evt);\n          this._setTitle(score, evt);\n          this.element.dataset.score = score;\n        }\n        this._target(score, evt);\n        if (this.opt.mouseover) {\n          this.opt.mouseover.call(this, score, this.element, evt);\n        }\n      });\n    });\n  }\n\n  _bindOverCancel() {\n    this.cancelButton.addEventListener('mouseover', evt => {\n      if (this._isReadOnly()) {\n        return;\n      }\n      const starOff = this.opt.path + this.opt.starOff;\n      let icon = this.opt.cancelOn;\n      if (this.opt.starType === 'img') {\n        this.stars.forEach(value => {\n          value.src = starOff;\n        });\n      } else {\n        icon = this.opt.cancelClass + ' ' + icon;\n        this.stars.forEach(value => {\n          value.className = starOff;\n        });\n      }\n      this._setIcon(this.cancelButton, icon);\n      this._target(null, evt);\n      if (this.opt.mouseover) {\n        this.opt.mouseover.call(this, null, this.element, evt);\n      }\n    });\n  }\n\n  _buildScoreField() {\n    const input = document.createElement('input');\n    input.name = this.opt.scoreName;\n    input.type = 'hidden';\n    this.element.appendChild(input);\n    return input;\n  }\n\n  _createCancel() {\n    const button = document.createElement(this.opt.starType);\n    const icon = this.opt.path + this.opt.cancelOff;\n    button.setAttribute('class', this.opt.cancelClass);\n    button.setAttribute('title', this.opt.cancelHint);\n    if (this.opt.starType === 'img') {\n      button.setAttribute('alt', 'x');\n      button.setAttribute('src', icon);\n    } else {\n      button.classList.add(icon);\n\n      button.setAttribute('data-alt', 'x');\n    }\n    if (this.opt.cancelPlace === 'left') {\n      this.element.prepend('\\u00A0');\n      this.element.prepend(button);\n    } else {\n      this.element.append('\\u00A0');\n      this.element.appendChild(button);\n    }\n    this.cancelButton = button;\n  }\n\n  _createScore() {\n    this.scoreField = document.querySelector(this.opt.targetScore) || this._buildScoreField();\n  }\n  _createStars() {\n    for (let i = 1; i <= this.opt.number; i++) {\n      const attributes = this._attributesForIndex(i);\n      let star = document.createElement(this.opt.starType);\n      for (const key in attributes) {\n        star.setAttribute(key, attributes[key]);\n      }\n      this.element.appendChild(star);\n      if (this.opt.space && i < this.opt.number) {\n        this.element.append('\\u00A0');\n      }\n    }\n    this.stars = this.element.querySelectorAll(this.opt.starType);\n  }\n\n  _error(message) {\n    throw new Error(message);\n  }\n  _executeCallbacks() {\n    const options = ['number', 'readOnly', 'score', 'scoreName', 'target', 'path'];\n    for (let i = 0; i < options.length; i++) {\n      if (typeof this.opt[options[i]] === 'function') {\n        const value = this.opt[options[i]].call(this, this.element);\n        if (value) {\n          this.opt[options[i]] = value;\n        } else {\n          delete this.opt[options[i]];\n        }\n      }\n    }\n  }\n\n  _fill(score) {\n    let hash = 0;\n    if (this.opt.iconRangeSame && this.opt.iconRange) {\n      while (hash < this.opt.iconRange.length && this.opt.iconRange[hash].range < score) {\n        hash++;\n      }\n    }\n    for (let i = 1; i <= this.stars.length; i++) {\n      const star = this.stars[i - 1];\n      const turnOn = this._turnOn(i, score);\n      let icon;\n      if (this.opt.iconRange && this.opt.iconRange.length > hash) {\n        const irange = this.opt.iconRange[hash];\n        icon = this._getRangeIcon(irange, turnOn);\n        if (i <= irange.range) {\n          this._setIcon(star, icon);\n        }\n        if (i === irange.range) {\n          hash++;\n        }\n      } else {\n        icon = this.opt[turnOn ? 'starOn' : 'starOff'];\n        this._setIcon(star, icon);\n      }\n    }\n  }\n  _getDecimal(number, fractions) {\n    const decimal = number.toString().split('.')[1];\n    let result = 0;\n    if (decimal) {\n      result = parseInt(decimal.slice(0, fractions), 10);\n      if (decimal.slice(1, 5) === '9999') {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  _getRangeIcon(irange, turnOn) {\n    return turnOn ? irange.on || this.opt.starOn : irange.off || this.opt.starOff;\n  }\n\n  _getScoreByPosition(evt, icon) {\n    let score = parseInt(icon.alt || icon.getAttribute('data-alt'), 10);\n    if (this.opt.half) {\n      const size = this._getWidth();\n      const percent = parseFloat((evt.pageX - icon.offsetLeft) / size);\n      score = score - 1 + percent;\n    }\n    return score;\n  }\n\n  _getHint(score, evt) {\n    if (score !== 0 && !score) {\n      return this.opt.noRatedMsg;\n    }\n    const integer = Math.ceil(score);\n    const group = this.opt.hints[(integer || 1) - 1];\n    const set = !evt || this.isMove;\n    let decimal = this._getDecimal(score, 1);\n    let hint = group;\n    if (this.opt.precision) {\n      if (set) {\n        decimal = decimal === 0 ? 9 : decimal - 1;\n      }\n      hint = group[decimal];\n    } else if (this.opt.halfShow || this.opt.half) {\n      decimal = set && decimal === 0 ? 1 : decimal > 5 ? 1 : 0;\n      hint = group[decimal];\n    }\n    return hint === '' ? '' : hint || score;\n  }\n\n  _getWidth() {\n    const width = parseFloat(this.stars[0].offsetWidth) || 16;\n    if (!width) {\n      this._error('Could not get the icon width!');\n    }\n    return width;\n  }\n  _isReadOnly() {\n    return {\n      true: true\n    }[this.element.dataset.readOnly] || false;\n  }\n\n  _lock() {\n    const hint = this._getHint(this.scoreField.value);\n    this.element.style.pointerEvents = 'none';\n    this.element.title = hint;\n    this.scoreField.readOnly = true;\n    this.stars.forEach(value => {\n      value.title = hint;\n    });\n    if (this.cancelButton) {\n      this.cancelButton.style.display = 'none';\n    }\n    this.element.dataset.readOnly = true;\n  }\n  _nameForIndex(i) {\n    return this.opt.score && this.opt.score >= i ? 'starOn' : 'starOff';\n  }\n\n  _resetTitle() {\n    for (let i = 0; i < this.opt.number; i++) {\n      this.stars[i].title = this._getHint(i + 1);\n    }\n  }\n  _parseOptions(dataset) {\n    return Object.keys(dataset).reduce((acc, key) => {\n      let value = {\n        true: true,\n        false: false\n      }[dataset[key]];\n      value = value !== null && value !== undefined ? value : dataset[key];\n      if (!isNaN(value) && Number.isInteger(parseFloat(value))) {\n        value = Number(value);\n      }\n      acc[key] = value;\n      return acc;\n    }, {});\n  }\n\n  _roundHalfScore(score) {\n    const integer = parseInt(score, 10);\n    let decimal = this._getDecimal(score, 1);\n    if (decimal !== 0) {\n      decimal = decimal > 5 ? 1 : 0.5;\n    }\n    return integer + decimal;\n  }\n\n  _roundStars(score, evt) {\n    const name = this._starName(score, evt);\n    if (name) {\n      const icon = this.opt[name];\n      const star = this.stars[Math.ceil(score) - 1];\n      star && this._setIcon(star, icon);\n    }\n  }\n\n  _setIcon(star, icon) {\n    star[this.opt.starType === 'img' ? 'src' : 'className'] = this.opt.path + icon;\n  }\n  _setPath() {\n    this.opt.path = this.opt.path || '';\n    if (this.opt.path && this.opt.path.slice(-1) !== '/') {\n      this.opt.path += '/';\n    }\n  }\n\n  _setTarget(target, score) {\n    if (score) {\n      score = this.opt.targetFormat.toString().replace('{score}', score);\n    }\n    if (target instanceof HTMLInputElement || target instanceof HTMLSelectElement) {\n      target.value = score;\n    } else {\n      target.textContent = score;\n    }\n  }\n\n  _setTitle(score, evt) {\n    if (score) {\n      const integer = parseInt(Math.ceil(score), 10);\n      const star = this.stars.item(integer - 1);\n      star.title = this._getHint(score, evt);\n    }\n  }\n  _starName(score, evt) {\n    const decimal = +(score % 1).toFixed(2);\n    if (evt || this.isMove) {\n      return decimal > 0.5 ? 'starOn' : 'starHalf';\n    }\n    if (decimal <= this.opt.round.down) {\n      return;\n    }\n    if (this.opt.halfShow && decimal < this.opt.round.up) {\n      return 'starHalf';\n    }\n    if (decimal < this.opt.round.full) {\n      return 'starOff';\n    }\n    return 'starOn';\n  }\n\n  _target(score, evt) {\n    if (this.opt.target) {\n      const target = document.querySelector(this.opt.target);\n      if (!target) {\n        this._error('Target selector invalid or missing!');\n      }\n      const mouseover = evt && evt.type === 'mouseover';\n      if (score === undefined) {\n        score = this.opt.targetText;\n      } else if (score === null) {\n        score = mouseover ? this.opt.cancelHint : this.opt.targetText;\n      } else {\n        if (this.opt.targetType === 'hint') {\n          score = this._getHint(score, evt);\n        } else if (this.opt.precision) {\n          score = parseFloat(score).toFixed(1);\n        }\n        const mousemove = evt && evt.type === 'mousemove';\n        if (!mouseover && !mousemove && !this.opt.targetKeep) {\n          score = this.opt.targetText;\n        }\n      }\n      this._setTarget(target, score);\n    }\n  }\n\n  _turnOn(i, score) {\n    return this.opt.single ? i === score : i <= score;\n  }\n\n  _unlock() {\n    this.element.style.cursor = 'pointer';\n    this.element.style.pointerEvents = 'auto';\n    this.element.removeAttribute('title');\n    this.element.dataset.readOnly = false;\n    this.scoreField.readOnly = false;\n    this._resetTitle();\n    if (this.cancelButton) {\n      this.cancelButton.style.display = '';\n    }\n  }\n}"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClsourceRoot":""}